Una de las primeras cosas que aprendí fue cómo crear modelos en Odoo usando Python. Fue interesante ver cómo se manejan las relaciones entre tablas, como Many2many, One2many, y Many2one. Entender cómo funciona el modelado en Odoo me ayudó mucho a organizar mejor los datos y ver cómo interactúan entre sí.
Trabajar con vistas en XML fue todo un reto al principio, sobre todo entender cómo estructurar correctamente los formularios y listas para que se vean bien en la interfaz de Odoo. Sin embargo, una vez que le agarras el truco, te das cuenta de lo poderoso que es personalizar cada vista para hacerla más intuitiva para el usuario.
Configurar los permisos de usuario con ir.model.access.csv fue crucial. Al principio cometí errores al asignar permisos, lo que hacía que algunos usuarios no pudieran acceder a ciertas funcionalidades. Tuve que revisar varias veces la documentación y los permisos asignados para asegurarme de que todo funcionara correctamente.
Crear el campo calculado de age basado en la fecha de nacimiento fue interesante. Me obligó a repasar conceptos básicos de Python y a entender cómo se integran estas lógicas dentro de los modelos de Odoo. Tuve algunos errores al principio al calcular la edad porque no estaba considerando los casos de fechas futuras o incorrectas, pero logré resolverlo ajustando la lógica de validación.
Depuración de Utilicé mucho print y el registro de errores de Odoo para depurar mi código. Aprendí que, aunque Python es bastante amigable, los errores de sintaxis o referencias no siempre son claros, así que tocaron varias pruebas y ajustes hasta que todo funcionara bien.
GitHub fue una herramienta clave para llevar un control de las versiones del módulo. Me sirvió para guardar cambios de manera ordenada y poder retroceder si algo salía mal. Cometí errores al no actualizar mis ramas y terminé sobreescribiendo algunas cosas, pero esto me enseñó la importancia de hacer commits claros y frecuentes.


PROBLEMAS

Errores de Dependencias: Uno de los primeros problemas que tuve fue con las dependencias de Odoo y algunos módulos que no estaban correctamente instalados. Esto me dio muchos dolores de cabeza porque el servidor no arrancaba o el módulo no se instalaba como debía. Tuve que revisar los logs varias veces y asegurarme de que todas las dependencias estuvieran bien declaradas en el __manifest__.py. Al final, fue una lección importante sobre lo detallista que hay que ser con las configuraciones iniciales.
Conflictos en los Nombres de Modelos y Campos: Me pasó un par de veces que, al crear los modelos, usé nombres que ya existían en Odoo o en otros módulos, lo que causaba conflictos y errores extraños. Esto resultó en que algunas vistas no se cargaban o los campos no aparecían en los formularios. Tuve que revisar la nomenclatura y hacer ajustes para evitar estos choques. Fue un buen recordatorio de la importancia de verificar los nombres y asegurarse de que sean únicos.
Errores en la Definición de Relaciones: Configurar las relaciones Many2many, One2many, y Many2one fue un desafío mayor de lo que esperaba. Hubo ocasiones en las que los datos no se mostraban correctamente o no se guardaban como debían, y me di cuenta de que estaba cometiendo errores en la forma en que definía las relaciones. A veces era un simple error de sintaxis, pero en otras, el problema era más complejo y requería un entendimiento más profundo de cómo Odoo maneja estas relaciones en la base de datos.
Permisos de Acceso: Al configurar los permisos de usuario con ir.model.access.csv, me encontré con problemas de acceso donde ciertos usuarios no podían ver o editar los registros como esperaba. Esto sucedió porque no había configurado bien los permisos, y me llevó tiempo entender cómo funciona realmente la estructura de permisos en Odoo. Fue frustrante, pero una vez que lo solucioné, entendí mejor la importancia de configurar correctamente los roles y permisos desde el inicio.
Errores en las Vistas XML: Trabajar con vistas XML fue un proceso de prueba y error. Hubo momentos en los que la vista simplemente no se cargaba, o no mostraba los campos que quería, y la razón era casi siempre un error en la sintaxis o en la estructura del XML. Fue frustrante porque a veces un pequeño error, como un atributo mal escrito, causaba que toda la vista fallara. Aprendí a ser más meticuloso y a revisar cuidadosamente cada línea.
Problemas de Sincronización con GitHub: En algunos momentos, al trabajar con GitHub, cometí errores al no mantener actualizadas mis ramas o al mezclar cambios que no debía. Esto me enseñó la importancia de hacer commits claros y frecuentes, y de manejar mejor las ramas para no perder trabajo ni mezclar funcionalidades que aún no estaban listas.
Manejo de Campos Calculados: Al implementar el campo calculado de la edad en school.student, encontré errores al intentar calcular la edad correctamente. A veces, los cálculos no se actualizaban automáticamente, y tuve que revisar cómo funcionan los campos calculados y asegurarlos con los decoradores adecuados. También me di cuenta de la importancia de validar los datos correctamente para evitar errores lógicos.
Lectura y Entendimiento de Logs: Los logs de Odoo son muy útiles, pero al principio me costaba entender exactamente qué me querían decir. Cometí errores de interpretación que me llevaron a intentar soluciones que no iban al problema real. Con el tiempo, aprendí a leerlos mejor y a utilizarlos como una herramienta fundamental para la depuración.